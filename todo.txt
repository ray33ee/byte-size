

- Find a better way to search tables for entries (bear in mind that a hash map wont work as we dont know how much we are matching from the main string)
 - Maybe some sort of binary tree?
    - Use rust's b tree and create our own custom type and custom comparison algorithm using the `Ord` trait
        - Make sure this algorithm matches an entry like 'download' before 'down'. (i.e. given 2 strings that have the same beginning, the larget should match)
 - Or maybe break a set down into a list of hashmaps arranged by the size of the string
- Implement Serde for CodeType to serialise it into bytes via bincode
- Add repeatable sequences allowing up to 32 repetitions
    - Repetitions include ascii characters, and also other strings commonly repeated ('hehe',. 'ha ha', 'soooooo', etc.).
    - Create a special ascii table that includes commonly repeaded sequences in the gaps
- Re order lists such that bigger words like 'download' match before their substrings like 'down'
- Create a struct that allows users to compress and decompress using customizable options. Add convenience functions that doo this with default options
- Match repetitions before numbers and compare which is better